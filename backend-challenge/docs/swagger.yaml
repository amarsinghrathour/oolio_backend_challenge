basePath: /
definitions:
  models.Order:
    description: Order model with list of products and coupon
    properties:
      couponCode:
        type: string
      id:
        type: string
      items:
        description: Not stored in DB directly
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      products:
        description: Resolved from DB
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.OrderItem:
    properties:
      productId:
        type: string
      quantity:
        type: integer
    type: object
  models.OrderReq:
    properties:
      couponCode:
        type: string
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
    required:
    - items
    type: object
  models.Product:
    description: Product model with ID, Name, Price, Category
    properties:
      category:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
host: localhost:8080
info:
  contact:
    name: Amar Singh Rathour
  description: This is a sample food ordering API.
  title: Order Food API
  version: "1.0"
paths:
  /order:
    post:
      consumes:
      - application/json
      description: Place a new order in the store
      parameters:
      - description: Order Details
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.OrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      security:
      - ApiKeyAuth: []
      summary: Place an order
      tags:
      - order
  /product:
    get:
      consumes:
      - application/json
      description: Get all products available for order
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List products
      tags:
      - product
  /product/{productId}:
    get:
      consumes:
      - application/json
      description: Returns a single product by ID
      parameters:
      - description: Product ID
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Find product by ID
      tags:
      - product
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: api_key
    type: apiKey
swagger: "2.0"
